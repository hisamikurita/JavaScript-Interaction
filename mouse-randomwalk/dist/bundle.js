!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}n.r(e);var r=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"randomIntFromRange",value:function(t,e){return Math.floor(Math.random()*(e-t+1)+t)}},{key:"randomColor",value:function(t){return t[Math.floor(Math.random()*t.length)]}}],(n=null)&&i(e.prototype,n),r&&i(e,r),t}();function o(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var a=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=e,this.y=n}var e,n,i;return e=t,(n=[{key:"set",value:function(t,e){return this.x=t,this.y=e,this}},{key:"clone",value:function(){return new t(this.x,this.y)}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this}},{key:"mult",value:function(t){return this.x*=t.x,this.y*=t.y,this}},{key:"multScalar",value:function(t){return this.x*=t,this.y*=t,this}},{key:"magnitude",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"normalized",value:function(){var t=Math.sqrt(this.x*this.x+this.y*this.y);this.x/=t,this.y/=t}},{key:"setFromScalarAngle",value:function(t,e){this.x=Math.cos(e)*t,this.y=Math.sin(e)*t}},{key:"distanceToSquared",value:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n}}])&&o(e.prototype,n),i&&o(e,i),t}();function s(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var u=function(){function t(e,n,i,r,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.pos=new a(e,n),this.radius=i,this.friction=new a(o,o),this.color=r,this.mouse=new a(this.canvas.width/2,this.canvas.height/2),this.vx=new a(0,0),this.num=5*Math.random()+2}var e,n,i;return e=t,(n=[{key:"update",value:function(){this.vectorOfParticleToMouse=this.mouse.clone().sub(this.pos),this.vectorOfParticleToMouse.normalized(),this.vectorOfParticleToMouse.multScalar(.1),this.vx.add(this.vectorOfParticleToMouse),this.vx.normalized(),this.pos.add(this.vx.clone().multScalar(this.num))}},{key:"draw",value:function(){this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(this.pos.x,this.pos.y,this.radius,0,2*Math.PI,!1),this.ctx.shadowBlur=5,this.ctx.shadowOffsetX=0,this.ctx.shadowOffsetY=0,this.ctx.globalAlpha="1",this.ctx.fillStyle=this.color,this.ctx.fill(),this.ctx.restore()}},{key:"mousemove",value:function(){var t=this;window.addEventListener("mousemove",(function(e){t.mouse.set(e.clientX,e.clientY)}))}}])&&s(e.prototype,n),i&&s(e,i),t}();window.onload=function(){var t=document.getElementById("canvas"),e=t.getContext("2d"),n=t.width=window.innerWidth,i=t.height=window.innerHeight,o=[],a=["#0952BD","#A5BFF0","#118CD6","#1AAEE8","#F2E8C9"];window.onresize=function(){n=t.width=window.innerWidth,i=t.height=window.innerHeight};for(var s=0;s<100;s++)o.push(new u(Math.random()*n,Math.random()*i,10,r.randomColor(a))),o[s].mousemove();!function t(){e.fillStyle="hsla(260,40%,5%,.2)",e.fillRect(0,0,n,i);for(var r=0;r<o.length;r++){var a=o[r];a.update(),a.draw()}requestAnimationFrame(t)}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,